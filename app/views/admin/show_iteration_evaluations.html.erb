<div class="container admin">

  <div class="team-evaluations-container panel">
    <h1>Team Evaluations</h1>
    <div class="filters-container">
      <div class="filters-label">
        Choose Iteration
      </div>
      <div class="filters-wrapper">
        <%= select_tag :"iteration-id", options_for_select(@iteration_select_options) %>
      </div>
    </div>
    <div class="heatmap-container inactive">
      <div class="heatmap-wrapper">
        <div class="heatmap-label">
          Heatmap
        </div>
        <%= link_to "Show", "#", :class => "heatmap-toggle btn", :"data-status" => "off" %>
      </div>
    </div>


    <section class="team-evaluations-wrapper"></section>
  </div>
</div>

<script type="text/javascript">
  $().ready(function() {
    $('#iteration-id').live('change', function() {
      var iterationId = $(this).val();
      $.ajax({
        url: '<%= admin_show_iteration_evaluations_path() %>',
        data: { 'iteration_id': iterationId },
        beforeSend: function(xhr, settings) {
          xhr.setRequestHeader('accept', '*/*;q=0.5, ' + settings.accepts.script);
        }
      });
    });

    $('td').live('hover', function(e) {
      $('.icon-edit-score').addClass('inactive');
      if ($(this).hasClass('evaluation')) {
        $(this).find('.icon-edit-score').removeClass('inactive');
      }
    });

    $('td').live('click', function(e) {
      var $target = $(e.target),
          $scoreContainer;
      if ( $target.hasClass('icon-edit-score') ) {
        $scoreContainer = $target.closest('.score-container');
        // show edit form for this score
        $scoreContainer.find('.edit-score-wrapper').removeClass('inactive');
        $scoreContainer.find('.score-wrapper').addClass('inactive');
      }
      e.preventDefault();
    });

    $('.edit-score-input').live('keydown', function(e) {
      var keyCode   = e.keyCode,
          newScore,
          evaluationId,
          $scoreContainer = $(this).closest('.score-container');

      if (keyCode === 13) {
        newScore = $(this).val();
        evaluationId = $(this).closest('.evaluation').attr('data-evaluation-id');
        $.ajax({
          url: '<%= admin_update_team_evaluation_path() %>',
          data: { 'evaluation_id' : evaluationId,
                  'score'         : newScore },
          beforeSend: function(xhr, settings) {
            xhr.setRequestHeader('accept', '*/*;q=0.5, ' + settings.accepts.script);
          }
        });
      } else if (keyCode == 27) {
        $scoreContainer.find('.score-wrapper').removeClass('inactive');
        $scoreContainer.find('.edit-score-wrapper').addClass('inactive');
      }
    });

    $('.heatmap-toggle').live('click', function(e) {
      var $evaluations  = $('.evaluation[data-evaluation-id!="0"]'),
          currentStatus = $(this).attr('data-status'),
          newStatus     = currentStatus === 'on' ? 'off' : 'on',
          newText       = newStatus === 'on' ? 'Hide' : 'Show';

      toggleHeatmap($evaluations, newStatus);
      $(this).attr('data-status', newStatus);
      $(this).text(newText);
      e.preventDefault();
    });

    $(window).scroll(function() {
      var currentOffsetTop = $(window).scrollTop();
      if (currentOffsetTop > 150) {
        $('.heatmap-wrapper').addClass('fixed');
      } else {
        $('.heatmap-wrapper').removeClass('fixed');
      }
    });

    $('.comment-text').live('click', function(e) {
      $(this).closest('.comment').find('.comment-text').toggleClass('inactive');
    });

  });

  function toggleHeatmap($evaluations, toggleStatus) {
    var tempScore,
        rgbaString  = 'rgba(255, 255, 255, 0.5)',
        minScore    = GradeScale['min'],
        maxScore    = GradeScale['max'];

    if (toggleStatus === 'on') {
      // turn heatmap vis on
      $.each($evaluations, function(index, item) {
        tempScore   = parseInt($(item).find('.score-value').text());
        rgbaString  = Colors.scoreToRgba(tempScore, 0.2);

        $(item).css('background', rgbaString);
      });
    } else if (toggleStatus === 'off') {
      // turn heatmap vis off
      $evaluations.css('background', rgbaString);
    }
  }

</script>
